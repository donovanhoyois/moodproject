@using MoodProject.App.Models
@using MoodProject.Core.Models

<div class="card">
  <div class="card-header">
    <p>@Question.CustomQuestion.Text</p>
    @if (Question.CustomQuestion.Id == 0)
    {
      <p>@Question.Symptom.Type.Name</p>
    }
  </div>
  <ul class="list-group list-group-flush">
    <InputRadioGroup @bind-Value="Question.Result">
      @foreach (var answer in Question.CustomQuestion.AnswerPossibilities)
      {
        <li class="list-group-item @GetSelectedCssClass(answer)" @onclick="() => SelectRow(answer)">
          <InputRadio Value="answer.Weight" hidden/>
          <span></span>
          <p>@answer.Text</p>
        </li>
      }
    </InputRadioGroup>
  </ul>
  <button type="button" class="btn btn-success" onclick="@OnClickValidate">@ValidateButtonText</button>
</div>

@code {
    [Parameter, EditorRequired]
    public AnswerableQuizzQuestion Question { get; set; }
    [Parameter, EditorRequired]
    public string ValidateButtonText { get; set; }
    [Parameter]
    public Action OnClickValidateAction { get; set; }

    private const string SelectedAnswerCssClass = "selected";

  private void OnClickValidate()
    {
      OnClickValidateAction.Invoke();
    }

    private void SelectRow(QuizzAnswer? quizzAnswer)
    {
      Question.Result = quizzAnswer.Weight;
      StateHasChanged();
    }

    private string GetSelectedCssClass(QuizzAnswer quizzAnswer)
    {
      return Question.Result.Equals(quizzAnswer.Weight) ? SelectedAnswerCssClass : string.Empty;
    }
    
}