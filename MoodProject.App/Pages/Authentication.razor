@* Client/Pages/Authentication.razor *@

@page "/authentication/{action}"
@using MoodProject.Core.Ports.In
@using MoodProject.Core
@using System.Security.Claims
@using System.Text.Json
@using MoodProject.App.Shared.Helpers

@inject IUsersService UsersService
@inject NavigationManager Navigation
@inject IConfiguration Configuration
@inject AuthenticationStateProvider AuthenticationStateProvider

@inherits IdentityHelper

<IdentityHelper />
<RemoteAuthenticatorView Action="@Action">
    <LogOut>
        @{
            var authority = (string)Configuration["Auth0:Authority"];
            var clientId = (string)Configuration["Auth0:ClientId"];

            Navigation.NavigateTo($"{authority}/v2/logout?client_id={clientId}");
        }
    </LogOut>
    <CompletingLoggingIn>
        <AuthorizeView>
            <Authorized>
                @{
                    
                }
            </Authorized>
        </AuthorizeView>
    </CompletingLoggingIn>
</RemoteAuthenticatorView>

@code{
    [Parameter]
    public string Action { get; set; }
    
    protected override async Task OnInitializedAsync()
    {
        //TODO: make this working
        if (Action.Equals("login-callback")){
            var hasAcceptedGdpr = await UsersService.GetGdprConsent(await GetUserId());
            if (!hasAcceptedGdpr)
            {
                Navigation.NavigateTo("/gdpr");
            }
            Navigation.NavigateTo("/profile");
        }
    }
}